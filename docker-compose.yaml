version: '3.8'

services:
  # app:
  #   build: .
  #   volumes:
  #     - ./app:/usr/app
  #   env_file:
  #     - .env
  #   ports:
  #     - '11434:11434'
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - mynetwork
  db:
    image: ankane/pgvector
    ports:
      - '5432:5432'
    volumes:
      - ./data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
      - mynetwork
  langfuse-server:
    image: langfuse/langfuse:2
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '4000:3000'
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@db:5432/langfuse
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - SALT=${LANGFUSE_SALT}
      - NEXTAUTH_URL=${LANGFUSE_HOST}
      - LANGFUSE_HOST=${LANGFUSE_HOST}
      - LANGFUSE_PUBLIC_KEY=${LANGFUSE_PUBLIC_KEY}
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
